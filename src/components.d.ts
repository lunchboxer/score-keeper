/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/router';

import { MyGroups as MyGroups } from './components/my-groups/my-groups';

interface HTMLMyGroupsElement extends MyGroups, HTMLElement {
}
declare var HTMLMyGroupsElement: {
  prototype: HTMLMyGroupsElement;
  new (): HTMLMyGroupsElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "my-groups": HTMLMyGroupsElement;
  }
  interface ElementTagNameMap {
      "my-groups": HTMLMyGroupsElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "my-groups": JSXElements.MyGroupsAttributes;
      }
  }
  namespace JSXElements {
      export interface MyGroupsAttributes extends HTMLAttributes {
        
          setGroupHandler?: any,
          groupResetHandler?: any
      }
  }
}

import { MyStudentList as MyStudentList } from './components/my-student-list/my-student-list';

interface HTMLMyStudentListElement extends MyStudentList, HTMLElement {
}
declare var HTMLMyStudentListElement: {
  prototype: HTMLMyStudentListElement;
  new (): HTMLMyStudentListElement;
};
declare global {
  interface HTMLElementTagNameMap {
      "my-student-list": HTMLMyStudentListElement;
  }
  interface ElementTagNameMap {
      "my-student-list": HTMLMyStudentListElement;
  }
  namespace JSX {
      interface IntrinsicElements {
          "my-student-list": JSXElements.MyStudentListAttributes;
      }
  }
  namespace JSXElements {
      export interface MyStudentListAttributes extends HTMLAttributes {
        
          addStarHandler?: any,
          removeStarHandler?: any,
          selectedGroup?: any
      }
  }
}

